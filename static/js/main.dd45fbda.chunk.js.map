{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUser","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","setUserId","isValidTitle","setTitleError","isValidUser","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","placeholder","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd45fbda.chunk.js","sourcesContent":["import React from 'react';\nimport User from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport Todo from '../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2\n      className=\"TodoInfo__title title is-2 is-spaced\"\n    >\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport Todo from '../types/Todo';\nimport './Todos.scss';\n\ntype Props = {\n  todos: Todo [];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport User from './components/types/User';\nimport Todo from './components/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isValidTitle, setTitleError] = useState(false);\n  const [isValidUser, setUserError] = useState(false);\n\n  const titleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const nameHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todos.map(todo => todo.id)) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"form box\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field \">\n          <label>\n            {'Title: '}\n            <input\n              placeholder=\"Title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              className=\"form_field input is-info\"\n              onChange={titleHandler}\n            />\n          </label>\n\n          {isValidTitle && (\n            <p className=\"error\">Please fill the title</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              className=\"form_field select is-info\"\n              onChange={nameHandler}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isValidUser && (\n            <p className=\"error\">Please choose a user</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-info button__main\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}